version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      - npm install -g @angular/cli
      - npm install

  pre_build:
    commands:
      - set -euo pipefail
      # Run linter
      - ng lint
      # Set build variables and fetch secrets
      - |
        export IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
        export FORMATTED_DATE=$(date --utc +"%a, %-d %b, %H:%M")
        export GIT_SHA=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c1-7)
        export API_URL=$(aws ssm get-parameter --name "/angular/API_URL" --query "Parameter.Value" --output text)
        export COGNITO_USER_POOL_ID=$(aws ssm get-parameter --name "/angular/COGNITO_USER_POOL_ID" --query "Parameter.Value" --output text)
        export COGNITO_USER_POOL_CLIENT_ID=$(aws ssm get-parameter --name "/angular/COGNITO_USER_POOL_CLIENT_ID" --query "Parameter.Value" --output text)
        export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        export AWS_REGION=${AWS_REGION:-us-east-1}
      # Replace environment variables
      - |
        sed -i "s|\$BUILD_DATE|${FORMATTED_DATE}|g" ./src/app/about/about.component.html
        sed -i "s|\$GIT_SHA|${GIT_SHA}|g" ./src/app/about/about.component.html
        sed -i "s|<AWS_ACCOUNT_ID>|$AWS_ACCOUNT_ID|g" .aws/taskdef.json
        sed -i "s|<AWS_REGION>|$AWS_REGION|g" .aws/taskdef.json
      # ECR login
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      # Build Docker image
      - |
        docker build \
          --platform=linux/amd64 \
          --build-arg API_URL=$API_URL \
          --build-arg NG_ENVIRONMENT=production \
          --build-arg COGNITO_USER_POOL_ID=$COGNITO_USER_POOL_ID \
          --build-arg COGNITO_USER_POOL_CLIENT_ID=$COGNITO_USER_POOL_CLIENT_ID \
          -t $ECR_REPO_NAME:$IMAGE_TAG \
          -t $ECR_REPO_NAME:latest \
          -f ./compose/Dockerfile.prod \
          .

  post_build:
    commands:
      # Push both tags to ECR
      - docker push $ECR_REPO_NAME:$IMAGE_TAG
      - docker push $ECR_REPO_NAME:latest
      # Create imagedefinitions.json for ECS Standard Deployment
      - echo "[{\"name\":\"angular-task\",\"imageUri\":\"$ECR_REPO_NAME:$IMAGE_TAG\"}]" > imagedefinitions.json
      # Place appspec.yaml in the root directory
      - cp .aws/appspec.yaml ./appspec.yaml
      - cp .aws/taskdef.json ./taskdef.json

artifacts:
  files:
    - imagedefinitions.json
    - appspec.yaml
    - taskdef.json
  base-directory: "."
